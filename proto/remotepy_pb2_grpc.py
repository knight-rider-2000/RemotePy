# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import remotepy_pb2 as proto_dot_remotepy__pb2


class RemotePyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Version = channel.unary_unary(
                '/RemotePy/Version',
                request_serializer=proto_dot_remotepy__pb2.VersionRequest.SerializeToString,
                response_deserializer=proto_dot_remotepy__pb2.VersionReply.FromString,
                )
        self.Packages = channel.unary_unary(
                '/RemotePy/Packages',
                request_serializer=proto_dot_remotepy__pb2.PackagesRequest.SerializeToString,
                response_deserializer=proto_dot_remotepy__pb2.PackagesReply.FromString,
                )
        self.PipInstall = channel.unary_unary(
                '/RemotePy/PipInstall',
                request_serializer=proto_dot_remotepy__pb2.PipInstallRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NewVenv = channel.unary_unary(
                '/RemotePy/NewVenv',
                request_serializer=proto_dot_remotepy__pb2.NewVenvRequest.SerializeToString,
                response_deserializer=proto_dot_remotepy__pb2.NewVenvReply.FromString,
                )
        self.DeleteVenv = channel.unary_unary(
                '/RemotePy/DeleteVenv',
                request_serializer=proto_dot_remotepy__pb2.DeleteVenvRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.PipUninstall = channel.unary_unary(
                '/RemotePy/PipUninstall',
                request_serializer=proto_dot_remotepy__pb2.PipUninstallRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListVenv = channel.unary_unary(
                '/RemotePy/ListVenv',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_remotepy__pb2.ListVenvReply.FromString,
                )
        self.Exec = channel.unary_stream(
                '/RemotePy/Exec',
                request_serializer=proto_dot_remotepy__pb2.ExecRequest.SerializeToString,
                response_deserializer=proto_dot_remotepy__pb2.ExecReply.FromString,
                )


class RemotePyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Version(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Packages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PipInstall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewVenv(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteVenv(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PipUninstall(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListVenv(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Exec(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RemotePyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=proto_dot_remotepy__pb2.VersionRequest.FromString,
                    response_serializer=proto_dot_remotepy__pb2.VersionReply.SerializeToString,
            ),
            'Packages': grpc.unary_unary_rpc_method_handler(
                    servicer.Packages,
                    request_deserializer=proto_dot_remotepy__pb2.PackagesRequest.FromString,
                    response_serializer=proto_dot_remotepy__pb2.PackagesReply.SerializeToString,
            ),
            'PipInstall': grpc.unary_unary_rpc_method_handler(
                    servicer.PipInstall,
                    request_deserializer=proto_dot_remotepy__pb2.PipInstallRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NewVenv': grpc.unary_unary_rpc_method_handler(
                    servicer.NewVenv,
                    request_deserializer=proto_dot_remotepy__pb2.NewVenvRequest.FromString,
                    response_serializer=proto_dot_remotepy__pb2.NewVenvReply.SerializeToString,
            ),
            'DeleteVenv': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteVenv,
                    request_deserializer=proto_dot_remotepy__pb2.DeleteVenvRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'PipUninstall': grpc.unary_unary_rpc_method_handler(
                    servicer.PipUninstall,
                    request_deserializer=proto_dot_remotepy__pb2.PipUninstallRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListVenv': grpc.unary_unary_rpc_method_handler(
                    servicer.ListVenv,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_remotepy__pb2.ListVenvReply.SerializeToString,
            ),
            'Exec': grpc.unary_stream_rpc_method_handler(
                    servicer.Exec,
                    request_deserializer=proto_dot_remotepy__pb2.ExecRequest.FromString,
                    response_serializer=proto_dot_remotepy__pb2.ExecReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RemotePy', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RemotePy(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemotePy/Version',
            proto_dot_remotepy__pb2.VersionRequest.SerializeToString,
            proto_dot_remotepy__pb2.VersionReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Packages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemotePy/Packages',
            proto_dot_remotepy__pb2.PackagesRequest.SerializeToString,
            proto_dot_remotepy__pb2.PackagesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PipInstall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemotePy/PipInstall',
            proto_dot_remotepy__pb2.PipInstallRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewVenv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemotePy/NewVenv',
            proto_dot_remotepy__pb2.NewVenvRequest.SerializeToString,
            proto_dot_remotepy__pb2.NewVenvReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteVenv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemotePy/DeleteVenv',
            proto_dot_remotepy__pb2.DeleteVenvRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PipUninstall(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemotePy/PipUninstall',
            proto_dot_remotepy__pb2.PipUninstallRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListVenv(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemotePy/ListVenv',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_remotepy__pb2.ListVenvReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Exec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/RemotePy/Exec',
            proto_dot_remotepy__pb2.ExecRequest.SerializeToString,
            proto_dot_remotepy__pb2.ExecReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
